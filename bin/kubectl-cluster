#!/bin/bash

set -euo pipefail

action="$1"

CYAN='\033[1;36m'
RST='\033[0m' # Reset

usage() {
  cat <<EOF
error: Needs <command> one of <create|delete>
EOF
exit 1
}

wait-for-pods() {
	kubectl wait --for=condition=Ready pods --all --all-namespaces --timeout=300s
}

cert-manager() {
	local version
	version=$(curl -fsSL https://api.github.com/repos/cert-manager/cert-manager/releases/latest | jq .name -r)
	kubectl apply -f "https://github.com/cert-manager/cert-manager/releases/download/${version}/cert-manager.yaml"
	while [ "$(kubectl get pods -n cert-manager 2>/dev/null | wc -l)" -lt 4 ]; do sleep 1; done
}

if [ "$action" == "" ]; then
	usage
fi

if [ "$action" == "create" ] || [ "$action" == "start" ]; then
	echo -e "${CYAN}Creating cluster${RST}"
	kind create cluster
	wait-for-pods
	echo -e "${CYAN}Adding cert-manager${RST}"
	cert-manager
	wait-for-pods
	kubectl cluster-info
	echo -e "${CYAN}All done. Cluster is ready.${RST}"
fi

if [ "$action" == "delete" ] || [ "$action" == "destroy" ]; then
	echo -e "${CYAN}Destroying cluster${RST}"
	kind delete cluster
	echo -e "${CYAN}All done. Cluster is destroyed.${RST}"
fi
